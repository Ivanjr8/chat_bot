import streamlit as st
import pyodbc

# Fun√ß√£o de conex√£o
def conectar_banco():
    try:
        conexao = pyodbc.connect(
            "DRIVER={ODBC Driver 17 for SQL Server};"
            "SERVER=myfreesqldbserver-0101.database.windows.net;"
            "DATABASE=myFreeDB;"
            "UID=ivan;"  # substitua pelo seu usu√°rio real
            "PWD=MigMat01#!;"  # substitua pela sua senha real
            "Encrypt=yes;"
            "TrustServerCertificate=no;"
            "Connection Timeout=30;"
        )
        return conexao
    except Exception as erro:
        st.error(f"‚ùå Erro ao conectar: {erro}")
        return None

# Fun√ß√£o para gerar perguntas aleat√≥rias
def gerar_inserts_aleatorios(qtd):
    perguntas_exemplo = [
        "Qual √© a capital do Brasil?",
        "O que √© um algoritmo?",
        "Quem descobriu o Brasil?",
        "O que significa HTML?",
        "Qual linguagem estiliza p√°ginas web?",
        "O que √© uma vari√°vel?",
        "Qual a fun√ß√£o do comando SELECT?",
        "O que representa o n√∫mero pi?",
        "Qual a diferen√ßa entre RAM e HD?",
        "Em que ano foi a independ√™ncia do Brasil?"
    ]
    inserts = []
    for i in range(1, qtd + 1):
        pergunta = random.choice(perguntas_exemplo)
        pergunta = pergunta.replace("'", "''")  # Escapar aspas simples
        fk_modulo = random.randint(100, 105)
        sql = f"INSERT INTO [dbo].[SimuladoPerguntas] ([id], [pergunta], [FK_MODULO]) VALUES ({i}, '{pergunta}', {fk_modulo});"
        inserts.append(sql)
    return inserts

# Interface Streamlit
st.set_page_config(page_title="Conex√£o com Banco", page_icon="üóÑÔ∏è", layout="centered")
st.title("üóÑÔ∏è Conex√£o com SQL Server")

st.markdown("Clique no bot√£o abaixo para conectar e listar as tabelas dispon√≠veis:")

if st.button("üîå Conectar ao Banco"):
    conexao = conectar_banco()
    
    if conexao:
        st.success("‚úÖ Conex√£o bem-sucedida com o banco de dados!")
        try:
            cursor = conexao.cursor()
            cursor.execute("SELECT name FROM sys.tables")
            tabelas = cursor.fetchall()

            if tabelas:
                st.subheader("üìÇ Tabelas encontradas:")
                for tabela in tabelas:
                    st.markdown(f"- **{tabela.name}**")

                # Gera√ß√£o de INSERTs aleat√≥rios
                st.subheader("üß™ Gerar INSERTs aleat√≥rios para SimuladoPerguntas")
                qtd = st.slider("Quantidade de INSERTs", 1, 20, 10)
                inserts = gerar_inserts_aleatorios(qtd)
                st.code("\n".join(inserts), language="sql")
            else:
                st.info("Nenhuma tabela encontrada no banco.")
        except Exception as erro:
            st.error(f"Erro ao buscar dados: {erro}")
        finally:
            conexao.close()
    else:
        st.warning("N√£o foi poss√≠vel estabelecer conex√£o.")
